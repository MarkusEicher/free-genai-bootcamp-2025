[tool.poetry]
name = "language-learning-portal"
version = "0.1.0"
description = "Backend for the Language Learning Portal"
authors = ["Your Name <your.email@example.com>"]
packages = [
    { include = "app" }
]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
fastapi = "^0.109.0"
uvicorn = "^0.27.0"
pydantic = "^2.6.0"
sqlalchemy = "^2.0.25"
alembic = "^1.13.1"
python-dotenv = "^1.0.0"
pydantic-settings = "^2.1.0"
redis = "^5.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
black = "^23.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.5"
httpx = "^0.27.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Test categories/markers
markers = [
    "privacy: Tests for privacy-focused features",
    "security: Tests for security features",
    "integration: Integration tests",
    "cache: Tests for caching functionality",
    "api: Tests for API endpoints"
]

# Test configuration
addopts = """
    --verbose
    --capture=no
    --cov=app
    --cov-report=term-missing
    --cov-report=html
    --no-cov-on-fail
"""

# Environment variables for testing
env = [
    "TESTING=1",
    "CACHE_DIR=./data/test_cache",
    "LOG_LEVEL=ERROR",
    "COLLECT_METRICS=0",
    "ENABLE_LOGGING=0"
]

# Warning filters
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
    "ignore::RuntimeWarning",
    "ignore::pydantic.PydanticDeprecatedSince20",
    "ignore::DeprecationWarning:httpx.*"
]

# Cache directory
cache_dir = ".pytest_cache"

# Logging configuration
log_cli = false
log_cli_level = "ERROR"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

# Directories to ignore
norecursedirs = [
    "*.egg",
    ".eggs",
    "dist",
    "build",
    ".git",
    ".tox",
    ".env",
    ".venv",
    "venv",
    "node_modules",
    "__pycache__",
    ".pytest_cache",
    "htmlcov"
]

